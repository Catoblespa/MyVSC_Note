


HRESULT int타입 형
    S_OK = 성공
    E_FAIL = 실패

HRESULT Init()  init실패하면 E_FAIL 리턴, 성공하면 S_OK넘기도록하자.


플레이어 Create() 함수로 생성을 캡슐화한다.
    릴리즈 , 생성자, 인잇을 private로 만들고
    static CPlayer* Create() 함수 만들기.



방향 벡터를 만들때는 무조건 단위 벡터로 만들어라
        x    y     z
2D   : 1.f , 1.f , 0.f 
3D   : 1.f , 1.f , 1,f


단위 베터를 만드는 방법

벡터의 크기를 구함 -> 벡터의 크기로 모든 x y z를 나눔

벡터 v(4,3,0)일때  피타고라스의 정리에 의해 크기는 5       float lenght = (sqrt(x*x + y*y);)
즉 방향인 단위 벡터는 v(4/lenght, 3/lenght 0/lenght); 가 된다.

즉 해당 벡터로 움직일 플레이어는 로 정리된다.
m_tInfo.vDir /= lenght; 
m_PlayerPos += m_tInfo.vDir * fSpeed;


숙제 1/ 플레이어가 마우스를 추적하게 만들어라.
벡터의 뺄셈
마우스의 위치 벡터에서 플레이어의 위치 벡터를 빼면 방향백터 나오죠 ?
그 방향백터를 정규화(단위벡터로 만들기)하고 , 플레이어의 속도를 벡터곱 해주면 될거같다.



숙제 2/ 백터의 내적, 코싸인 법칙에 대해 공부해와라.



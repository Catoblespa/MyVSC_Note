스크린에서 투영창으로의 변환 


뷰 포트 변환 행렬

|   Width/2       0         0         0|
|     0       -Height/2     0         0|
|     0           0      MaxZ-MinZ    0|
| X+Width/2  Y+Height/2    MinZ       1|


투영창에서의 마우스포인트 p = (Px,Py,Pz)에 뷰포트변환을 거치면 
스크린 포인트 s = (Sx.Sy) 를 얻는다.



Sx  =  Px * (Width / 2 )  + X + Width/2
Sy  = -Py * (Height/2)  + Y + Height/2

뷰포트 변환을 거친 이후의 -Z좌표는 2D이미지의 일부로 저장되는 것이 아니라
깊이 버퍼로 저정된다는걸 기억하자

현재 우리는 주어진 스크린 포인트 S를 이용해 P를 구해야 한다.
P를 풀면 다음을 얻는다.


Px  = (2Sx -2X - Width) / Width 
Py  =  -(2Sy + 2Y + Height) / Height

대부분의 경우에서처럼 뷰포트의 X와 Y맴버가 0이라고 가정하면 
간단하게 다음 단계로 진행하고 다음을 얻 을 수있다.

Px =  2 * Sx / Width -1
Py = -2 * Sy / Height +1
Pz = 1              //근본적인 정의 상 투영창은 평면 z=1 과 일치한다 따라서 Pz = 1이다.

하지만 이것으로 끝난 것이 아니다. 투영행렬은 다른 시점을 시뮬레이트 하기 위해
투영창의 포인트 배율을 변경한다. 변경되기 이전의 원래 포인트 값을 얻으려면
배율 연산의 역을 통해 포인트를 변환해야 한다.
투영 행렬을 P라고 한다면 변환 행렬 P00 와 P11 항목이 포인트의 X와 Y좌표의 배율을 변경하므로
다음과 같은 결과를 얻을 수 있다.


Px = (2X/ViewportWidth -1) * (1 /P00)
Py = (-2Y/ViewportHeight +1) * (1 /P11)
Pz = 1


//////////////////////////////////////////////////////////////////
픽킹 광선의 계산.alignas
광선의 위치를 나타내는 원점이 P0이고 방향을 나타내는 벡터가 u라 하면
인수 방정식 p(t) = P0 +tu를 통해 광선을 표현 할 수 있다.



광선의 원점은 또한 뷰 스페이스의 원점임을 알 수있다.
따라서 P0 = (0,0,0)이다. 만약 P가 광선을 발사하기 위한투영창의 포인트라면
방향 백터 u는   u =P - P0 = (Px ,Py,1) - (0,0,0) = P 로 얻을 수있다.





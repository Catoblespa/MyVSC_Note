변경 알고리즘은 읽기 알고리즘과는 달리 컨테이너의 요소를 바꿀 수 있는 알고리즘이다.
 그러나 요소의 값만 변경할 수 있을 뿐이지 컨테이너 자체에 대해서는 어떠한 조작도 하지 못한다는 점을 주의하자.
 요소를 제거한다거나 새로운 요소를 삽입한다거나 컨테이너의 크기를 변경하는 것도 불가능하다.
 왜냐하면 STL의 알고리즘들은 특수한 컨테이너에 소속되어 있는 것이 아니라 임의의 컨테이너와 함께 사용할 수 있도록 일반화되어 있기 때문이다.

 알고리즘이 컨테이너에 접근하는 유일한 방법은 반복자를 통하는 것 뿐이며 
 반복자는 컨테이너의 요소를 액세스하는 일반화된 방법을 제공할 뿐이지 컨테이너 자체를 액세스하는 것은 아니다.

 알고리즘이 일반성을 획득할 수 있는 이유는 반복자를 통해서만 컨테이너의 요소를 액세스하므로 
 컨테이너의 구조를 몰라도 약속된 방법(주로 연산자)만으로도 하고 싶은 동작을 다 할 수 있기 때문이다.

 알고리즘은 자신이 액세스하는 컨테이너가 어떤 구조를 가지고 있는지 상관하지 않으며 내부적인 구조에 상관없이 실행된다.
  심지어 어떤 컨테이너를 조작하고 있는 중인지도 전혀 모른다. 따라서 컨테이너에 새 요소를 어떻게 삽입하는지도 모르고, 삭제하는 방법도 알지 못하는 것이다.

  알고리즘이 컨테이너에 대해 할 수 있는 일은 요소값을 변경하거나 복사, 교환하는 정도에 불과하다. 
  컨테이너 자체에 대한 조작은 개별 컨테이너의 멤버 함수를 통해서만 수행할 수 있다.